{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","pages/AboutPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","id","to","TodoForm","props","useState","title","setTitle","value","onChange","event","target","type","placeholder","onKeyPress","key","onAdd","htmlFor","TodoList","todos","onToogle","onRemove","length","map","todo","classes","completed","push","join","toString","checked","onClick","preventDefault","removeHandler","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","item","window","confirm","filter","AboutPage","history","useNavigate","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAa,kBACzB,8BACC,sBAAKC,UAAU,mBAAf,UACC,mBAAGC,KAAK,IAAID,UAAU,aAAtB,yCAGA,qBAAIE,GAAG,aAAaF,UAAU,6BAA9B,UACC,6BACC,cAAC,IAAD,CAASG,GAAG,IAAZ,yBAED,6BACC,cAAC,IAAD,CAASA,GAAG,SAAZ,iC,sBCRQC,EAA8B,SAACC,GAC3C,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACC,sBAAKR,UAAU,cAAf,UACC,uBACCS,MAAOF,EACPG,SAfmB,SAACC,GACtBH,EAASG,EAAMC,OAAOH,QAepBI,KAAK,OACLX,GAAG,QACHY,YAAY,mBACZC,WAfqB,SAACJ,GACN,UAAdA,EAAMK,MACTX,EAAMY,MAAMV,GACZC,EAAS,QAcT,uBAAOU,QAAQ,QAAQlB,UAAU,SAAjC,kCClBUmB,EAA8B,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE7D,GAAqB,IAAjBF,EAAMG,OACT,OAAO,mBAAGvB,UAAU,SAAb,0CAQR,OACC,6BACEoB,EAAMI,KAAI,SAAAC,GACV,IAAMC,EAAU,CAAC,QAIjB,OAHGD,EAAKE,WACPD,EAAQE,KAAK,aAGb,oBAAkB5B,UAAW0B,EAAQG,KAAK,KAA1C,SACC,wBAAOX,QAASO,EAAKvB,GAAG4B,WAAxB,UACC,uBAAOjB,KAAK,WAAWkB,QAASN,EAAKE,UAAWjB,SAAU,kBAAMW,EAASI,EAAKvB,KAAKA,GAAIuB,EAAKvB,GAAG4B,aAC/F,+BAAOL,EAAKlB,QACZ,mBAAGP,UAAU,0BAA0BgC,QAAS,SAAArB,GAAK,OAjBrC,SAACA,EAAyBT,GAC/CS,EAAMsB,iBACNX,EAASpB,GAeqDgC,CAAcvB,EAAOc,EAAKvB,KAAnF,wBAJOuB,EAAKvB,UC1BNiC,EAAgB,WAC5B,MAA0B7B,mBAAkB,IAA5C,mBAAOc,EAAP,KAAcgB,EAAd,KAEAC,qBAAU,WACT,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAC1DN,EAASE,KACP,IAEHD,qBAAU,WACTI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUxB,MAC3C,CAACA,IA6BJ,OACC,qCACC,cAAC,EAAD,CAAUH,MA5BO,SAACV,GACnB,IAAMsC,EAAiB,CACtBtC,MAAOA,EACPL,GAAI4C,KAAKC,MACTpB,WAAW,GAGZS,GAAS,SAACY,GAAD,OAAWH,GAAX,mBAAuBG,UAsB/B,cAAC,EAAD,CACC5B,MAAOA,EACPC,SArBmB,SAACnB,GACtBkC,GAAS,SAAAY,GAAI,OAAIA,EAAKxB,KAAI,SAAAyB,GAItB,OAHAA,EAAK/C,KAAOA,IACd+C,EAAKtB,WAAasB,EAAKtB,WAEdsB,SAiBT3B,SAbmB,SAACpB,GACDgD,OAAOC,QAAQ,gCAEpCf,GAAS,SAAAY,GAAI,OAAIA,EAAKI,QAAO,SAAA3B,GAAI,OAAIA,EAAKvB,KAAOA,eCrCtCmD,EAAgB,WAC5B,IAAMC,EAAUC,cAChB,OACC,qCACC,gDACA,oPAGA,wBAAQvD,UAAU,MAAMgC,QAAS,kBAAMsB,EAAQ,MAA/C,4BCUYE,EAdC,WACf,OACC,eAAC,IAAD,WACC,cAAC,EAAD,IACA,qBAAKxD,UAAU,YAAf,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOyD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,eCVnCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.628ebbc1.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport {NavLink} from 'react-router-dom'\n\nexport const Navbar: FC = () => (\n\t<nav>\n\t\t<div className=\"nav-wrapper px-1\">\n\t\t\t<a href=\"/\" className=\"brand-logo\">\n\t\t\t\tTodo App (React+TypeScript)\n\t\t\t</a>\n\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink to=\"/\">Todo List</NavLink>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<NavLink to=\"/about\">About us</NavLink>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</nav>\n);","import React, { ChangeEvent, FC, KeyboardEvent, useState } from \"react\";\n\ninterface TodoFormProps {\n\tonAdd(title: string): void\n}\n\nexport const TodoForm: FC<TodoFormProps> = (props) => {\n\tconst [title, setTitle] = useState<string>(\"\");\n\n\tconst changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tsetTitle(event.target.value);\n\t};\n\n\tconst keyPressHandler = (event: KeyboardEvent) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tprops.onAdd(title);\n\t\t\tsetTitle(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"input-field\">\n\t\t\t<input\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"title\"\n\t\t\t\tplaceholder=\"Input todo title\"\n\t\t\t\tonKeyPress={keyPressHandler}\n\t\t\t/>\n\t\t\t<label htmlFor=\"title\" className=\"active\">\n\t\t\t\tInput todo title\n\t\t\t</label>\n\t\t</div>\n\t);\n};","\nimport React, { FC } from \"react\";\nimport { ITodo } from \"../interfaces\";\n\ntype TodoListProps = {\n\ttodos: ITodo[],\n\tonToogle(id: number): void,\n\tonRemove(id: number): void\n}\n\n\n\nexport const TodoList: FC<TodoListProps> = ({todos, onToogle, onRemove}) => {\n\n\tif (todos.length === 0) {\n\t\treturn <p className=\"center\">Todos are not avaliable yet!</p>;\n\t}\n\n\tconst removeHandler = (event: React.MouseEvent, id: number) => {\n\t\tevent.preventDefault();\n\t\tonRemove(id);\n\t}\n\t\n\treturn (\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo'];\n\t\t\t\tif(todo.completed) {\n\t\t\t\t\tclasses.push('completed')\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<li key={todo.id} className={classes.join(' ')}>\n\t\t\t\t\t\t<label htmlFor={todo.id.toString()}>\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked={todo.completed} onChange={() => onToogle(todo.id)} id={todo.id.toString()}/>\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<i className=\"material-icons red-text\" onClick={event => removeHandler(event, todo.id)}>\n\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t)\n}","import React, { FC, useState, useEffect } from \"react\";\nimport { TodoForm } from \"../components/TodoForm\";\nimport { TodoList } from \"../components/TodoList\";\nimport { ITodo } from '../interfaces';\n\nexport const TodosPage: FC = () => {\n\tconst [todos, setTodos] = useState<ITodo[]>([]);\n\n\tuseEffect(() => {\n\t\tconst saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\n\t\tsetTodos(saved);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t}, [todos]);\n\n\t\n\tconst addHandler = (title: string) => {\n\t\tconst newTodo: ITodo = {\n\t\t\ttitle: title,\n\t\t\tid: Date.now(),\n\t\t\tcompleted: false\n\t\t}\n    \t//setTodos([...todos, newTodo]);\n\t\tsetTodos((prev) => [newTodo, ...prev])\n\t}\n\n\tconst toogleHandler = (id: number) => {\n\t\tsetTodos(prev => prev.map(item => {\n\t\t\tif(item.id === id) {\n\t\t\t\titem.completed = !item.completed;\n\t\t\t}\n      return item\n\t\t}))\n\t}\n\n\tconst removeHandler = (id: number) => {\n\t\tconst shouldRemove = window.confirm('Do you want to remove todo?');\n\t\tif(shouldRemove){\n\t\tsetTodos(prev => prev.filter(todo => todo.id !== id))\n\t\t}\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<TodoForm onAdd={addHandler} />\n\t\t\t<TodoList\n\t\t\t\ttodos={todos}\n\t\t\t\tonToogle={toogleHandler}\n\t\t\t\tonRemove={removeHandler}\n\t\t\t/>\n\t\t</>\n\t)\n}","import React, { FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const AboutPage: FC = () => {\n\tconst history = useNavigate();\n\treturn(\n\t\t<>\n\t\t\t<h1>About Todo App</h1>\n\t\t\t<p>\n\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Aliquam officia alias provident dolor ab laborum debitis a culpa asperiores saepe explicabo vel eius, molestiae sed aspernatur voluptatem maxime et ipsum.\n\t\t\t</p>\n\t\t\t<button className=\"btn\" onClick={() => history('/')}>Back todos</button>\n\t\t</>\n\t)\n}","import \"./styles/style.css\";\nimport React, {FC} from \"react\";\nimport { Navbar } from \"./components/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { TodosPage } from \"./pages/TodosPage\";\nimport { AboutPage } from \"./pages/AboutPage\";\n\nconst App: FC = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Navbar />\n\t\t\t<div className=\"container\">\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<TodosPage />} />\n\t\t\t\t\t<Route path=\"/about\" element={<AboutPage/>}/>\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}